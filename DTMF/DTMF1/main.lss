
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000be  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  00000112  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 0000001b  00000000  00000000  00000132  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   00000075  00000000  00000000  0000014d  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 0000003f  00000000  00000000  000001c2  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000000e8  00000000  00000000  00000201  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000020  00000000  00000000  000002ec  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000075  00000000  00000000  0000030c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 5d 00 	jmp	0xba	; 0xba <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#include<avr/io.h>
#include<util/delay.h>

main()
{ 
  DDRA = 0b000000000;
  6c:	1a ba       	out	0x1a, r1	; 26
  PORTA = 0xff;
  6e:	8f ef       	ldi	r24, 0xFF	; 255
  70:	8b bb       	out	0x1b, r24	; 27
  DDRC = 0b11111111;
  72:	84 bb       	out	0x14, r24	; 20
  while(1)
  {
    if((PINA&15)==1)
	 PORTC = (1<<1);
  74:	42 e0       	ldi	r20, 0x02	; 2
	
	if((PINA&15)==2)
	PORTC = (1<<2);
  76:	34 e0       	ldi	r19, 0x04	; 4
	
	if((PINA&15)==3)
	PORTC = (1<<1||1<<2);
  78:	91 e0       	ldi	r25, 0x01	; 1
	
	if((PINA&15)==4)
	PORTC = (1<<3);
  7a:	28 e0       	ldi	r18, 0x08	; 8
  DDRA = 0b000000000;
  PORTA = 0xff;
  DDRC = 0b11111111;
  while(1)
  {
    if((PINA&15)==1)
  7c:	89 b3       	in	r24, 0x19	; 25
  7e:	8f 70       	andi	r24, 0x0F	; 15
  80:	81 30       	cpi	r24, 0x01	; 1
  82:	09 f4       	brne	.+2      	; 0x86 <main+0x1a>
	 PORTC = (1<<1);
  84:	45 bb       	out	0x15, r20	; 21
	
	if((PINA&15)==2)
  86:	89 b3       	in	r24, 0x19	; 25
  88:	8f 70       	andi	r24, 0x0F	; 15
  8a:	82 30       	cpi	r24, 0x02	; 2
  8c:	09 f4       	brne	.+2      	; 0x90 <main+0x24>
	PORTC = (1<<2);
  8e:	35 bb       	out	0x15, r19	; 21
	
	if((PINA&15)==3)
  90:	89 b3       	in	r24, 0x19	; 25
  92:	8f 70       	andi	r24, 0x0F	; 15
  94:	83 30       	cpi	r24, 0x03	; 3
  96:	09 f4       	brne	.+2      	; 0x9a <main+0x2e>
	PORTC = (1<<1||1<<2);
  98:	95 bb       	out	0x15, r25	; 21
	
	if((PINA&15)==4)
  9a:	89 b3       	in	r24, 0x19	; 25
  9c:	8f 70       	andi	r24, 0x0F	; 15
  9e:	84 30       	cpi	r24, 0x04	; 4
  a0:	09 f4       	brne	.+2      	; 0xa4 <main+0x38>
	PORTC = (1<<3);
  a2:	25 bb       	out	0x15, r18	; 21
	
	if((PINA&15)==5)
  a4:	89 b3       	in	r24, 0x19	; 25
  a6:	8f 70       	andi	r24, 0x0F	; 15
  a8:	85 30       	cpi	r24, 0x05	; 5
  aa:	09 f4       	brne	.+2      	; 0xae <main+0x42>
	PORTC = (1<<1||1<<3);
  ac:	95 bb       	out	0x15, r25	; 21
	
	if((PINA&15)==6)
  ae:	89 b3       	in	r24, 0x19	; 25
  b0:	8f 70       	andi	r24, 0x0F	; 15
  b2:	86 30       	cpi	r24, 0x06	; 6
  b4:	19 f7       	brne	.-58     	; 0x7c <main+0x10>
	PORTC = (1<<2||1<<3);
  b6:	95 bb       	out	0x15, r25	; 21
  b8:	e1 cf       	rjmp	.-62     	; 0x7c <main+0x10>

000000ba <_exit>:
  ba:	f8 94       	cli

000000bc <__stop_program>:
  bc:	ff cf       	rjmp	.-2      	; 0xbc <__stop_program>
